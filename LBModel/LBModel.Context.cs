//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LBModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LBEntities : DbContext
    {
        public LBEntities()
            : base("name=LBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Bank> Banks { get; set; }
        public DbSet<BankAddressType> BankAddressTypes { get; set; }
        public DbSet<BankBranch> BankBranches { get; set; }
        public DbSet<BankBranchAddress> BankBranchAddresses { get; set; }
        public DbSet<BankBranchPhone> BankBranchPhones { get; set; }
        public DbSet<PhoneType> PhoneTypes { get; set; }
    
        public virtual int spLOONEYBANK_Bank_Insert(string bankName, string bankDesc, Nullable<bool> isOpen, Nullable<int> routingNumber)
        {
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bankDescParameter = bankDesc != null ?
                new ObjectParameter("BankDesc", bankDesc) :
                new ObjectParameter("BankDesc", typeof(string));
    
            var isOpenParameter = isOpen.HasValue ?
                new ObjectParameter("IsOpen", isOpen) :
                new ObjectParameter("IsOpen", typeof(bool));
    
            var routingNumberParameter = routingNumber.HasValue ?
                new ObjectParameter("RoutingNumber", routingNumber) :
                new ObjectParameter("RoutingNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLOONEYBANK_Bank_Insert", bankNameParameter, bankDescParameter, isOpenParameter, routingNumberParameter);
        }
    }
}
